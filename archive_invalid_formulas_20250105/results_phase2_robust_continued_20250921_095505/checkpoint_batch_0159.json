[
  {
    "experiment_id": "s5_sigma0.2_nx100_T0.3_lam0.5_m5_seed101",
    "config": {
      "s": 5,
      "sensor_positions": [
        0.2,
        0.35,
        0.5,
        0.65,
        0.8
      ],
      "placement_type": "shifted",
      "sigma": 0.2,
      "n_x": 100,
      "T": 0.3,
      "lambda": 0.5,
      "c": 1.0,
      "m": 5,
      "n_t": 100,
      "seed": 101,
      "delta": 0.05,
      "alpha": 0.001,
      "M": 2000,
      "R": 100,
      "n": 500,
      "Delta_x": 0.01,
      "Delta_t": 0.0030303030303030303,
      "mcmc_n_steps": 10000,
      "mcmc_n_burn": 2000,
      "is_baseline": false
    },
    "status": "error",
    "error": "'dict' object cannot be interpreted as an integer",
    "traceback": "Traceback (most recent call last):\n  File \"/Users/tanishagupta/PAC_BAYES_INVERSE_PDE.-1/run_full_grid_phase2_robust.py\", line 76, in run_single_experiment_with_timeout\n    mcmc_results = sampler.run_adaptive_length(n_burn=1000)\n  File \"/Users/tanishagupta/PAC_BAYES_INVERSE_PDE.-1/src/mcmc/adaptive_metropolis_hastings_phase2.py\", line 128, in run_adaptive_length\n    kappa_init = self.posterior.prior.sample(1, seed=self.rng.randint(10000))[0]\n  File \"/Users/tanishagupta/PAC_BAYES_INVERSE_PDE.-1/run_full_grid_phase2.py\", line 87, in sample\n    return rng.uniform(self.kappa_min, self.kappa_max, (n_samples, self.m))\n  File \"numpy/random/mtrand.pyx\", line 1158, in numpy.random.mtrand.RandomState.uniform\n  File \"_common.pyx\", line 636, in numpy.random._common.cont\nTypeError: 'dict' object cannot be interpreted as an integer\n",
    "performance": {
      "runtime": 0.006623983383178711
    }
  },
  {
    "experiment_id": "s5_sigma0.2_nx100_T0.3_lam0.5_m5_seed202",
    "config": {
      "s": 5,
      "sensor_positions": [
        0.2,
        0.35,
        0.5,
        0.65,
        0.8
      ],
      "placement_type": "shifted",
      "sigma": 0.2,
      "n_x": 100,
      "T": 0.3,
      "lambda": 0.5,
      "c": 1.0,
      "m": 5,
      "n_t": 100,
      "seed": 202,
      "delta": 0.05,
      "alpha": 0.001,
      "M": 2000,
      "R": 100,
      "n": 500,
      "Delta_x": 0.01,
      "Delta_t": 0.0030303030303030303,
      "mcmc_n_steps": 10000,
      "mcmc_n_burn": 2000,
      "is_baseline": false
    },
    "status": "error",
    "error": "'dict' object cannot be interpreted as an integer",
    "traceback": "Traceback (most recent call last):\n  File \"/Users/tanishagupta/PAC_BAYES_INVERSE_PDE.-1/run_full_grid_phase2_robust.py\", line 76, in run_single_experiment_with_timeout\n    mcmc_results = sampler.run_adaptive_length(n_burn=1000)\n  File \"/Users/tanishagupta/PAC_BAYES_INVERSE_PDE.-1/src/mcmc/adaptive_metropolis_hastings_phase2.py\", line 128, in run_adaptive_length\n    kappa_init = self.posterior.prior.sample(1, seed=self.rng.randint(10000))[0]\n  File \"/Users/tanishagupta/PAC_BAYES_INVERSE_PDE.-1/run_full_grid_phase2.py\", line 87, in sample\n    return rng.uniform(self.kappa_min, self.kappa_max, (n_samples, self.m))\n  File \"numpy/random/mtrand.pyx\", line 1158, in numpy.random.mtrand.RandomState.uniform\n  File \"_common.pyx\", line 636, in numpy.random._common.cont\nTypeError: 'dict' object cannot be interpreted as an integer\n",
    "performance": {
      "runtime": 0.007538318634033203
    }
  },
  {
    "experiment_id": "s5_sigma0.2_nx100_T0.3_lam0.5_m5_seed303",
    "config": {
      "s": 5,
      "sensor_positions": [
        0.2,
        0.35,
        0.5,
        0.65,
        0.8
      ],
      "placement_type": "shifted",
      "sigma": 0.2,
      "n_x": 100,
      "T": 0.3,
      "lambda": 0.5,
      "c": 1.0,
      "m": 5,
      "n_t": 100,
      "seed": 303,
      "delta": 0.05,
      "alpha": 0.001,
      "M": 2000,
      "R": 100,
      "n": 500,
      "Delta_x": 0.01,
      "Delta_t": 0.0030303030303030303,
      "mcmc_n_steps": 10000,
      "mcmc_n_burn": 2000,
      "is_baseline": false
    },
    "status": "error",
    "error": "'dict' object cannot be interpreted as an integer",
    "traceback": "Traceback (most recent call last):\n  File \"/Users/tanishagupta/PAC_BAYES_INVERSE_PDE.-1/run_full_grid_phase2_robust.py\", line 76, in run_single_experiment_with_timeout\n    mcmc_results = sampler.run_adaptive_length(n_burn=1000)\n  File \"/Users/tanishagupta/PAC_BAYES_INVERSE_PDE.-1/src/mcmc/adaptive_metropolis_hastings_phase2.py\", line 128, in run_adaptive_length\n    kappa_init = self.posterior.prior.sample(1, seed=self.rng.randint(10000))[0]\n  File \"/Users/tanishagupta/PAC_BAYES_INVERSE_PDE.-1/run_full_grid_phase2.py\", line 87, in sample\n    return rng.uniform(self.kappa_min, self.kappa_max, (n_samples, self.m))\n  File \"numpy/random/mtrand.pyx\", line 1158, in numpy.random.mtrand.RandomState.uniform\n  File \"_common.pyx\", line 636, in numpy.random._common.cont\nTypeError: 'dict' object cannot be interpreted as an integer\n",
    "performance": {
      "runtime": 0.007272958755493164
    }
  },
  {
    "experiment_id": "s5_sigma0.2_nx100_T0.3_lam1.0_m3_seed101",
    "config": {
      "s": 5,
      "sensor_positions": [
        0.2,
        0.35,
        0.5,
        0.65,
        0.8
      ],
      "placement_type": "shifted",
      "sigma": 0.2,
      "n_x": 100,
      "T": 0.3,
      "lambda": 1.0,
      "c": 1.0,
      "m": 3,
      "n_t": 50,
      "seed": 101,
      "delta": 0.05,
      "alpha": 0.001,
      "M": 2000,
      "R": 100,
      "n": 250,
      "Delta_x": 0.01,
      "Delta_t": 0.006122448979591836,
      "mcmc_n_steps": 10000,
      "mcmc_n_burn": 2000,
      "is_baseline": false
    },
    "status": "error",
    "error": "'dict' object cannot be interpreted as an integer",
    "traceback": "Traceback (most recent call last):\n  File \"/Users/tanishagupta/PAC_BAYES_INVERSE_PDE.-1/run_full_grid_phase2_robust.py\", line 76, in run_single_experiment_with_timeout\n    mcmc_results = sampler.run_adaptive_length(n_burn=1000)\n  File \"/Users/tanishagupta/PAC_BAYES_INVERSE_PDE.-1/src/mcmc/adaptive_metropolis_hastings_phase2.py\", line 128, in run_adaptive_length\n    kappa_init = self.posterior.prior.sample(1, seed=self.rng.randint(10000))[0]\n  File \"/Users/tanishagupta/PAC_BAYES_INVERSE_PDE.-1/run_full_grid_phase2.py\", line 87, in sample\n    return rng.uniform(self.kappa_min, self.kappa_max, (n_samples, self.m))\n  File \"numpy/random/mtrand.pyx\", line 1158, in numpy.random.mtrand.RandomState.uniform\n  File \"_common.pyx\", line 636, in numpy.random._common.cont\nTypeError: 'dict' object cannot be interpreted as an integer\n",
    "performance": {
      "runtime": 0.0029668807983398438
    }
  },
  {
    "experiment_id": "s5_sigma0.2_nx100_T0.3_lam1.0_m3_seed202",
    "config": {
      "s": 5,
      "sensor_positions": [
        0.2,
        0.35,
        0.5,
        0.65,
        0.8
      ],
      "placement_type": "shifted",
      "sigma": 0.2,
      "n_x": 100,
      "T": 0.3,
      "lambda": 1.0,
      "c": 1.0,
      "m": 3,
      "n_t": 50,
      "seed": 202,
      "delta": 0.05,
      "alpha": 0.001,
      "M": 2000,
      "R": 100,
      "n": 250,
      "Delta_x": 0.01,
      "Delta_t": 0.006122448979591836,
      "mcmc_n_steps": 10000,
      "mcmc_n_burn": 2000,
      "is_baseline": false
    },
    "status": "error",
    "error": "'dict' object cannot be interpreted as an integer",
    "traceback": "Traceback (most recent call last):\n  File \"/Users/tanishagupta/PAC_BAYES_INVERSE_PDE.-1/run_full_grid_phase2_robust.py\", line 76, in run_single_experiment_with_timeout\n    mcmc_results = sampler.run_adaptive_length(n_burn=1000)\n  File \"/Users/tanishagupta/PAC_BAYES_INVERSE_PDE.-1/src/mcmc/adaptive_metropolis_hastings_phase2.py\", line 128, in run_adaptive_length\n    kappa_init = self.posterior.prior.sample(1, seed=self.rng.randint(10000))[0]\n  File \"/Users/tanishagupta/PAC_BAYES_INVERSE_PDE.-1/run_full_grid_phase2.py\", line 87, in sample\n    return rng.uniform(self.kappa_min, self.kappa_max, (n_samples, self.m))\n  File \"numpy/random/mtrand.pyx\", line 1158, in numpy.random.mtrand.RandomState.uniform\n  File \"_common.pyx\", line 636, in numpy.random._common.cont\nTypeError: 'dict' object cannot be interpreted as an integer\n",
    "performance": {
      "runtime": 0.0025310516357421875
    }
  },
  {
    "experiment_id": "s5_sigma0.2_nx100_T0.3_lam1.0_m3_seed303",
    "config": {
      "s": 5,
      "sensor_positions": [
        0.2,
        0.35,
        0.5,
        0.65,
        0.8
      ],
      "placement_type": "shifted",
      "sigma": 0.2,
      "n_x": 100,
      "T": 0.3,
      "lambda": 1.0,
      "c": 1.0,
      "m": 3,
      "n_t": 50,
      "seed": 303,
      "delta": 0.05,
      "alpha": 0.001,
      "M": 2000,
      "R": 100,
      "n": 250,
      "Delta_x": 0.01,
      "Delta_t": 0.006122448979591836,
      "mcmc_n_steps": 10000,
      "mcmc_n_burn": 2000,
      "is_baseline": false
    },
    "status": "error",
    "error": "'dict' object cannot be interpreted as an integer",
    "traceback": "Traceback (most recent call last):\n  File \"/Users/tanishagupta/PAC_BAYES_INVERSE_PDE.-1/run_full_grid_phase2_robust.py\", line 76, in run_single_experiment_with_timeout\n    mcmc_results = sampler.run_adaptive_length(n_burn=1000)\n  File \"/Users/tanishagupta/PAC_BAYES_INVERSE_PDE.-1/src/mcmc/adaptive_metropolis_hastings_phase2.py\", line 128, in run_adaptive_length\n    kappa_init = self.posterior.prior.sample(1, seed=self.rng.randint(10000))[0]\n  File \"/Users/tanishagupta/PAC_BAYES_INVERSE_PDE.-1/run_full_grid_phase2.py\", line 87, in sample\n    return rng.uniform(self.kappa_min, self.kappa_max, (n_samples, self.m))\n  File \"numpy/random/mtrand.pyx\", line 1158, in numpy.random.mtrand.RandomState.uniform\n  File \"_common.pyx\", line 636, in numpy.random._common.cont\nTypeError: 'dict' object cannot be interpreted as an integer\n",
    "performance": {
      "runtime": 0.002334117889404297
    }
  },
  {
    "experiment_id": "s5_sigma0.2_nx100_T0.3_lam1.0_m3_seed101",
    "config": {
      "s": 5,
      "sensor_positions": [
        0.2,
        0.35,
        0.5,
        0.65,
        0.8
      ],
      "placement_type": "shifted",
      "sigma": 0.2,
      "n_x": 100,
      "T": 0.3,
      "lambda": 1.0,
      "c": 1.0,
      "m": 3,
      "n_t": 100,
      "seed": 101,
      "delta": 0.05,
      "alpha": 0.001,
      "M": 2000,
      "R": 100,
      "n": 500,
      "Delta_x": 0.01,
      "Delta_t": 0.0030303030303030303,
      "mcmc_n_steps": 10000,
      "mcmc_n_burn": 2000,
      "is_baseline": false
    },
    "status": "error",
    "error": "'dict' object cannot be interpreted as an integer",
    "traceback": "Traceback (most recent call last):\n  File \"/Users/tanishagupta/PAC_BAYES_INVERSE_PDE.-1/run_full_grid_phase2_robust.py\", line 76, in run_single_experiment_with_timeout\n    mcmc_results = sampler.run_adaptive_length(n_burn=1000)\n  File \"/Users/tanishagupta/PAC_BAYES_INVERSE_PDE.-1/src/mcmc/adaptive_metropolis_hastings_phase2.py\", line 128, in run_adaptive_length\n    kappa_init = self.posterior.prior.sample(1, seed=self.rng.randint(10000))[0]\n  File \"/Users/tanishagupta/PAC_BAYES_INVERSE_PDE.-1/run_full_grid_phase2.py\", line 87, in sample\n    return rng.uniform(self.kappa_min, self.kappa_max, (n_samples, self.m))\n  File \"numpy/random/mtrand.pyx\", line 1158, in numpy.random.mtrand.RandomState.uniform\n  File \"_common.pyx\", line 636, in numpy.random._common.cont\nTypeError: 'dict' object cannot be interpreted as an integer\n",
    "performance": {
      "runtime": 0.004132986068725586
    }
  },
  {
    "experiment_id": "s5_sigma0.2_nx100_T0.3_lam1.0_m3_seed202",
    "config": {
      "s": 5,
      "sensor_positions": [
        0.2,
        0.35,
        0.5,
        0.65,
        0.8
      ],
      "placement_type": "shifted",
      "sigma": 0.2,
      "n_x": 100,
      "T": 0.3,
      "lambda": 1.0,
      "c": 1.0,
      "m": 3,
      "n_t": 100,
      "seed": 202,
      "delta": 0.05,
      "alpha": 0.001,
      "M": 2000,
      "R": 100,
      "n": 500,
      "Delta_x": 0.01,
      "Delta_t": 0.0030303030303030303,
      "mcmc_n_steps": 10000,
      "mcmc_n_burn": 2000,
      "is_baseline": false
    },
    "status": "error",
    "error": "'dict' object cannot be interpreted as an integer",
    "traceback": "Traceback (most recent call last):\n  File \"/Users/tanishagupta/PAC_BAYES_INVERSE_PDE.-1/run_full_grid_phase2_robust.py\", line 76, in run_single_experiment_with_timeout\n    mcmc_results = sampler.run_adaptive_length(n_burn=1000)\n  File \"/Users/tanishagupta/PAC_BAYES_INVERSE_PDE.-1/src/mcmc/adaptive_metropolis_hastings_phase2.py\", line 128, in run_adaptive_length\n    kappa_init = self.posterior.prior.sample(1, seed=self.rng.randint(10000))[0]\n  File \"/Users/tanishagupta/PAC_BAYES_INVERSE_PDE.-1/run_full_grid_phase2.py\", line 87, in sample\n    return rng.uniform(self.kappa_min, self.kappa_max, (n_samples, self.m))\n  File \"numpy/random/mtrand.pyx\", line 1158, in numpy.random.mtrand.RandomState.uniform\n  File \"_common.pyx\", line 636, in numpy.random._common.cont\nTypeError: 'dict' object cannot be interpreted as an integer\n",
    "performance": {
      "runtime": 0.004189968109130859
    }
  },
  {
    "experiment_id": "s5_sigma0.2_nx100_T0.3_lam1.0_m3_seed303",
    "config": {
      "s": 5,
      "sensor_positions": [
        0.2,
        0.35,
        0.5,
        0.65,
        0.8
      ],
      "placement_type": "shifted",
      "sigma": 0.2,
      "n_x": 100,
      "T": 0.3,
      "lambda": 1.0,
      "c": 1.0,
      "m": 3,
      "n_t": 100,
      "seed": 303,
      "delta": 0.05,
      "alpha": 0.001,
      "M": 2000,
      "R": 100,
      "n": 500,
      "Delta_x": 0.01,
      "Delta_t": 0.0030303030303030303,
      "mcmc_n_steps": 10000,
      "mcmc_n_burn": 2000,
      "is_baseline": false
    },
    "status": "error",
    "error": "'dict' object cannot be interpreted as an integer",
    "traceback": "Traceback (most recent call last):\n  File \"/Users/tanishagupta/PAC_BAYES_INVERSE_PDE.-1/run_full_grid_phase2_robust.py\", line 76, in run_single_experiment_with_timeout\n    mcmc_results = sampler.run_adaptive_length(n_burn=1000)\n  File \"/Users/tanishagupta/PAC_BAYES_INVERSE_PDE.-1/src/mcmc/adaptive_metropolis_hastings_phase2.py\", line 128, in run_adaptive_length\n    kappa_init = self.posterior.prior.sample(1, seed=self.rng.randint(10000))[0]\n  File \"/Users/tanishagupta/PAC_BAYES_INVERSE_PDE.-1/run_full_grid_phase2.py\", line 87, in sample\n    return rng.uniform(self.kappa_min, self.kappa_max, (n_samples, self.m))\n  File \"numpy/random/mtrand.pyx\", line 1158, in numpy.random.mtrand.RandomState.uniform\n  File \"_common.pyx\", line 636, in numpy.random._common.cont\nTypeError: 'dict' object cannot be interpreted as an integer\n",
    "performance": {
      "runtime": 0.004813194274902344
    }
  },
  {
    "experiment_id": "s5_sigma0.2_nx100_T0.3_lam1.0_m5_seed101",
    "config": {
      "s": 5,
      "sensor_positions": [
        0.2,
        0.35,
        0.5,
        0.65,
        0.8
      ],
      "placement_type": "shifted",
      "sigma": 0.2,
      "n_x": 100,
      "T": 0.3,
      "lambda": 1.0,
      "c": 1.0,
      "m": 5,
      "n_t": 50,
      "seed": 101,
      "delta": 0.05,
      "alpha": 0.001,
      "M": 2000,
      "R": 100,
      "n": 250,
      "Delta_x": 0.01,
      "Delta_t": 0.006122448979591836,
      "mcmc_n_steps": 10000,
      "mcmc_n_burn": 2000,
      "is_baseline": false
    },
    "status": "error",
    "error": "'dict' object cannot be interpreted as an integer",
    "traceback": "Traceback (most recent call last):\n  File \"/Users/tanishagupta/PAC_BAYES_INVERSE_PDE.-1/run_full_grid_phase2_robust.py\", line 76, in run_single_experiment_with_timeout\n    mcmc_results = sampler.run_adaptive_length(n_burn=1000)\n  File \"/Users/tanishagupta/PAC_BAYES_INVERSE_PDE.-1/src/mcmc/adaptive_metropolis_hastings_phase2.py\", line 128, in run_adaptive_length\n    kappa_init = self.posterior.prior.sample(1, seed=self.rng.randint(10000))[0]\n  File \"/Users/tanishagupta/PAC_BAYES_INVERSE_PDE.-1/run_full_grid_phase2.py\", line 87, in sample\n    return rng.uniform(self.kappa_min, self.kappa_max, (n_samples, self.m))\n  File \"numpy/random/mtrand.pyx\", line 1158, in numpy.random.mtrand.RandomState.uniform\n  File \"_common.pyx\", line 636, in numpy.random._common.cont\nTypeError: 'dict' object cannot be interpreted as an integer\n",
    "performance": {
      "runtime": 0.003454923629760742
    }
  }
]